<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="a092e795-c3e2-4eb2-bf9f-1037a31b0832" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/test/certs/empty.ca" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/fixtures/d/file1" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/fixtures/d/file2" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/fixtures/d/sub-dir/file5" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/fixtures/d/sub-files/file3" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/fixtures/d/sub-files/file4" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/fixtures/e/file" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.gitignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/docker-vm.iml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/jsLibraryMappings.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/misc.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/modules.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/vcs.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/.bin/JSONStream" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/.bin/JSONStream.cmd" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/.bin/mkdirp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/.bin/mkdirp.cmd" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/LICENSE.APACHE2" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/LICENSE.MIT" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/examples/all_docs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/bool.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/destroy_missing.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/doubledot1.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/doubledot2.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/empty.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/fixtures/all_npm.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/fixtures/depth.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/fn.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/gen.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/map.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/multiple_objects.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/multiple_objects_error.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/non_object_roots.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/null.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/parsejson.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/stringify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/stringify_object.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/test2.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/JSONStream/test/two-ways.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/bl/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/bl/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/bl/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/bl/LICENSE.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/bl/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/bl/bl.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/bl/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/bl/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/concat-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/concat-stream/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/concat-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/concat-stream/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/core-util-is/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/core-util-is/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/core-util-is/float.patch" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/core-util-is/lib/util.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/core-util-is/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/core-util-is/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/.coveralls.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/.eslintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/karma.conf.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/node.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/src/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/src/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/src/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/debug/src/node.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/lib/http.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/lib/http_duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/lib/modem.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/lib/util.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/isarray/build/build.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/lib/_stream_duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/lib/_stream_passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/lib/_stream_readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/lib/_stream_transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/lib/_stream_writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/node_modules/readable-stream/writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/docker-modem/test/modem_test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/.eslintignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/.eslintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/container.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/docker.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/exec.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/image.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/network.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/node.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/plugin.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/secret.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/service.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/task.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/util.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/lib/volume.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/dockerode/ubuntu-xenial-16.04-cloudimg-console.log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/end-of-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/end-of-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/end-of-stream/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/end-of-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/inherits/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/inherits/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/inherits/inherits.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/inherits/inherits_browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/inherits/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/isarray/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/isarray/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/isarray/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/isarray/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/README.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/bench.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/examples/twitterfeed.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/jsonparse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/samplejson/basic.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/samplejson/basic2.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/test/boundary.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/test/primitives.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/jsonparse/test/utf8.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/example/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/test/dash.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/test/default_bool.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/test/dotted.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/test/long.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/test/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/test/parse_modified.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/test/short.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/minimist/test/whitespace.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/bin/cmd.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/bin/usage.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/examples/pow.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/chmod.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/clobber.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/mkdirp.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/opts_fs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/opts_fs_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/perm.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/perm_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/race.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/rel.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/return.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/return_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/root.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/umask.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/mkdirp/test/umask_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/ms/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/ms/license.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/ms/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/ms/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/once/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/once/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/once/once.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/once/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/process-nextick-args/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/process-nextick-args/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/process-nextick-args/license.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/process-nextick-args/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/process-nextick-args/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/process-nextick-args/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/pump/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/pump/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/pump/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/pump/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/pump/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/pump/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/pump/test-browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/pump/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/doc/stream.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/doc/wg-meetings/2015-01-30.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/readable-stream/writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/.gitlab-ci.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/test/certs/garbage.ca" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/test/certs/split0.ca" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/test/certs/split1.ca" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/test/certs/test-chain.bundle" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/test/certs/unreadable.ca/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/split-ca/test/splitCa.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/string_decoder/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/string_decoder/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/string_decoder/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/string_decoder/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/string_decoder/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/fixtures/a/hello.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/fixtures/b/a/test.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/fixtures/c/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/fixtures/e/directory/.ignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-fs/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-stream/extract.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-stream/headers.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-stream/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-stream/pack.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/tar-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/LICENSE.APACHE2" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/LICENSE.MIT" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/test/async.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/test/auto-destroy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/test/buffering.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/test/end.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/through/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/typedarray/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/typedarray/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/typedarray/example/tarray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/typedarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/typedarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/typedarray/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/typedarray/test/server/undef_globals.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/typedarray/test/tarray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/util-deprecate/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/util-deprecate/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/util-deprecate/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/util-deprecate/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/util-deprecate/node.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/util-deprecate/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/wrappy/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/wrappy/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/wrappy/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/wrappy/wrappy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/xtend/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/xtend/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/xtend/LICENCE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/xtend/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/xtend/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/xtend/immutable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/xtend/mutable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/xtend/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/node_modules/xtend/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/package.json" />
    </list>
    <ignored path="$PROJECT_DIR$/.tmp/" />
    <ignored path="$PROJECT_DIR$/temp/" />
    <ignored path="$PROJECT_DIR$/tmp/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FileEditorManager">
    <leaf />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/.gitignore" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER">
    <package-json value="$PROJECT_DIR$/package.json" />
  </component>
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="NodeModulesDirectoryManager">
    <handled-path value="$PROJECT_DIR$/node_modules" />
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="-8" />
    <option name="y" value="-8" />
    <option name="width" value="1936" />
    <option name="height" value="1066" />
  </component>
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="Scratches" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="docker-vm" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="docker-vm" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="settings.editor.selected.configurable" value="settings.nodejs" />
    <property name="HbShouldOpenHtmlAsHb" value="" />
    <property name="nodejs_interpreter_path" value="D:/ProgramIDE/Nodejs/node" />
    <property name="javascript.nodejs.core.library.configured.version" value="6.6.0" />
    <property name="JavaScriptPreferStrict" value="true" />
    <property name="JavaScriptWeakerCompletionTypeGuess" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="DartCommandLineRunConfigurationType" factoryName="Dart Command Line Application">
      <method />
    </configuration>
    <configuration default="true" type="DartTestRunConfigurationType" factoryName="Dart Test">
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerJest" factoryName="Jest">
      <node-interpreter value="project" />
      <working-dir value="" />
      <envs />
      <scope-kind value="ALL" />
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerKarma" factoryName="Karma">
      <config-file value="" />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerProtractor" factoryName="Protractor">
      <config-file value="" />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JavascriptDebugType" factoryName="JavaScript Debug">
      <method />
    </configuration>
    <configuration default="true" type="NodeJSConfigurationType" factoryName="Node.js" path-to-node="project" working-dir="">
      <method />
    </configuration>
    <configuration default="true" type="cucumber.js" factoryName="Cucumber.js">
      <option name="cucumberJsArguments" value="" />
      <option name="executablePath" />
      <option name="filePath" />
      <method />
    </configuration>
    <configuration default="true" type="js.build_tools.gulp" factoryName="Gulp.js">
      <method />
    </configuration>
    <configuration default="true" type="js.build_tools.npm" factoryName="npm">
      <command value="run" />
      <scripts />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="mocha-javascript-test-runner" factoryName="Mocha">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <working-directory />
      <pass-parent-env>true</pass-parent-env>
      <envs />
      <ui />
      <extra-mocha-options />
      <test-kind>DIRECTORY</test-kind>
      <test-directory />
      <recursive>false</recursive>
      <method />
    </configuration>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a092e795-c3e2-4eb2-bf9f-1037a31b0832" name="Default" comment="" />
      <created>1495362691615</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1495362691615</updated>
      <workItem from="1495362692920" duration="106000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="106000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1936" height="1066" extended-state="6" />
    <layout>
      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="npm" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Mongo Explorer" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="processedProjectFiles" value="true" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/node_modules/dockerode/lib/docker.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2223">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/node_modules/dockerode/lib/node.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="0">
            <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
            <folding />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="171">
          <caret line="9" column="13" lean-forward="false" selection-start-line="9" selection-start-column="13" selection-end-line="9" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>